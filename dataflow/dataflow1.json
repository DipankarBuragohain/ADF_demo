{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Emp",
						"type": "DatasetReference"
					},
					"name": "Emp"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Outputdataset",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EID as string,",
				"          NAME as string,",
				"          SALARY as string,",
				"          Bonus as string,",
				"          GENDER as string,",
				"          DEPTID as string,",
				"          DoJ as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Emp",
				"source(output(",
				"          DeptID as string,",
				"          DeptName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Dept",
				"Emp, Dept join(Emp@DEPTID == Dept@DeptID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DeptID as string,",
				"          DeptName as string",
				"     ),",
				"     partitionFileNames:['empdeptoutput'],",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}